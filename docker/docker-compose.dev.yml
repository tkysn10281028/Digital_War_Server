services:
  # ==============================
  # Nginx(API用のロードバランサ)
  # ==============================
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-server
    networks:
      - app-net

  # ==============================
  # Envoy (リアルタイム通信用のロードバランサ)
  # ==============================
  envoy:
    image: envoyproxy/envoy:v1.30-latest
    container_name: envoy
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
    ports:
      - "8081:8081"
    depends_on:
      - realtime-server
    networks:
      - app-net

  # ==============================
  # REST APIサーバー (2台構成)
  # ==============================
  api-server:
    build:
      context: ../api-server
      dockerfile: ../docker/Dockerfiles/api-server.Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - Redis__Host=redis
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-net
    deploy:
      replicas: 2

  # ==============================
  # リアルタイム通信サーバー (2台構成)
  # ==============================
  realtime-server:
    build:
      context: ../
      dockerfile: ./docker/Dockerfiles/realtime-server.Dockerfile
    networks:
      - app-net
    deploy:
      replicas: 2

  # ==============================
  # DB (MySQL)
  # ==============================
  db:
    image: mysql
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: owdb
      MYSQL_USER: owuser
      MYSQL_PASSWORD: PassW0rd
      TZ: "Asia/Tokyo"
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-pPassW0rd"]
      interval: 5s
      retries: 10
      timeout: 3s
    networks:
      - app-net

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    ports:
      - "8082:80"
    depends_on:
      - db
    networks:
      - app-net

  # ==============================
  # Redis (Pub/Sub & セッション共有)
  # ==============================
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-net

  # ==============================
  # S3エミュレーター (MinIO)
  # ==============================
  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data    
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  minio_data: